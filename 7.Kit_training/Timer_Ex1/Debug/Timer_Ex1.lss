
Timer_Ex1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000012a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000001  00800060  00800060  0000019e  2**0
                  ALLOC
  2 .stab         000003c0  00000000  00000000  000001a0  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006a5  00000000  00000000  00000560  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <main>:
#include<util/delay.h>
#include<avr/interrupt.h>
void Timer0_Init(void);
char num=0;
int main(void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62
	/* Application initialization*/
	DDRC|=1<<PC0;
  84:	a4 e3       	ldi	r26, 0x34	; 52
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	e4 e3       	ldi	r30, 0x34	; 52
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	81 60       	ori	r24, 0x01	; 1
  90:	8c 93       	st	X, r24
	PORTC&=~(1<<PC0);
  92:	a5 e3       	ldi	r26, 0x35	; 53
  94:	b0 e0       	ldi	r27, 0x00	; 0
  96:	e5 e3       	ldi	r30, 0x35	; 53
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	8e 7f       	andi	r24, 0xFE	; 254
  9e:	8c 93       	st	X, r24
	 Timer0_Init();
  a0:	0e 94 7e 00 	call	0xfc	; 0xfc <Timer0_Init>
		/* Super_Loop*/
			while(1)
			{

while(!((1<<TOV0)&TIFR));
  a4:	e8 e5       	ldi	r30, 0x58	; 88
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	88 2f       	mov	r24, r24
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	81 70       	andi	r24, 0x01	; 1
  b0:	90 70       	andi	r25, 0x00	; 0
  b2:	00 97       	sbiw	r24, 0x00	; 0
  b4:	b9 f3       	breq	.-18     	; 0xa4 <main+0x28>
num++;
  b6:	80 91 60 00 	lds	r24, 0x0060
  ba:	8f 5f       	subi	r24, 0xFF	; 255
  bc:	80 93 60 00 	sts	0x0060, r24
TIFR|=1<<TOV0;
  c0:	a8 e5       	ldi	r26, 0x58	; 88
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	e8 e5       	ldi	r30, 0x58	; 88
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	81 60       	ori	r24, 0x01	; 1
  cc:	8c 93       	st	X, r24
if(num==1)
  ce:	80 91 60 00 	lds	r24, 0x0060
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	29 f4       	brne	.+10     	; 0xe0 <main+0x64>
{
	TCNT0=24;
  d6:	e2 e5       	ldi	r30, 0x52	; 82
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	88 e1       	ldi	r24, 0x18	; 24
  dc:	80 83       	st	Z, r24
  de:	e2 cf       	rjmp	.-60     	; 0xa4 <main+0x28>
}
else{
	TCNT0=0;
  e0:	e2 e5       	ldi	r30, 0x52	; 82
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	10 82       	st	Z, r1
PORTC^=1<<PC0;
  e6:	a5 e3       	ldi	r26, 0x35	; 53
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	e5 e3       	ldi	r30, 0x35	; 53
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	90 81       	ld	r25, Z
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	89 27       	eor	r24, r25
  f4:	8c 93       	st	X, r24
num=0;
  f6:	10 92 60 00 	sts	0x0060, r1
  fa:	d4 cf       	rjmp	.-88     	; 0xa4 <main+0x28>

000000fc <Timer0_Init>:

			}

}
void Timer0_Init(void)
{
  fc:	df 93       	push	r29
  fe:	cf 93       	push	r28
 100:	cd b7       	in	r28, 0x3d	; 61
 102:	de b7       	in	r29, 0x3e	; 62
	TCCR0=1<<FOC0|1<<CS02|1<<CS00;
 104:	e3 e5       	ldi	r30, 0x53	; 83
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	85 e8       	ldi	r24, 0x85	; 133
 10a:	80 83       	st	Z, r24
	TCNT0=0;
 10c:	e2 e5       	ldi	r30, 0x52	; 82
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	10 82       	st	Z, r1
	TIMSK|=1<<TOIE0;
 112:	a9 e5       	ldi	r26, 0x59	; 89
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	e9 e5       	ldi	r30, 0x59	; 89
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	81 60       	ori	r24, 0x01	; 1
 11e:	8c 93       	st	X, r24

}
 120:	cf 91       	pop	r28
 122:	df 91       	pop	r29
 124:	08 95       	ret

00000126 <_exit>:
 126:	f8 94       	cli

00000128 <__stop_program>:
 128:	ff cf       	rjmp	.-2      	; 0x128 <__stop_program>
