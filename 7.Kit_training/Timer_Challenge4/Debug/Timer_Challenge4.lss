
Timer_Challenge4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001b2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  000001b2  00000226  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000450  00000000  00000000  00000228  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      000006e3  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_7>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 eb       	ldi	r30, 0xB2	; 178
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include<util/delay.h>
void Timer1_Ctc_Mode(void);
void Timer1_Pwm_Mode(void);
char flag=1;
int main(void)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
	/* Application initialization*/
		Timer1_Pwm_Mode();
  8a:	0e 94 b8 00 	call	0x170	; 0x170 <Timer1_Pwm_Mode>
		DDRD|=1<<PD5;
  8e:	a1 e3       	ldi	r26, 0x31	; 49
  90:	b0 e0       	ldi	r27, 0x00	; 0
  92:	e1 e3       	ldi	r30, 0x31	; 49
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	80 81       	ld	r24, Z
  98:	80 62       	ori	r24, 0x20	; 32
  9a:	8c 93       	st	X, r24
  9c:	ff cf       	rjmp	.-2      	; 0x9c <main+0x1a>

0000009e <Timer1_Ctc_Mode>:



}
void Timer1_Ctc_Mode(void)
{
  9e:	df 93       	push	r29
  a0:	cf 93       	push	r28
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
	SREG|=1<<7;
  a6:	af e5       	ldi	r26, 0x5F	; 95
  a8:	b0 e0       	ldi	r27, 0x00	; 0
  aa:	ef e5       	ldi	r30, 0x5F	; 95
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	80 81       	ld	r24, Z
  b0:	80 68       	ori	r24, 0x80	; 128
  b2:	8c 93       	st	X, r24
	TCCR1A=(1<<FOC1A);
  b4:	ef e4       	ldi	r30, 0x4F	; 79
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	88 e0       	ldi	r24, 0x08	; 8
  ba:	80 83       	st	Z, r24
	TCCR1B=	(1<<CS11) | (1<<WGM12);
  bc:	ee e4       	ldi	r30, 0x4E	; 78
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	8a e0       	ldi	r24, 0x0A	; 10
  c2:	80 83       	st	Z, r24
	TCNT1=0;
  c4:	ec e4       	ldi	r30, 0x4C	; 76
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	11 82       	std	Z+1, r1	; 0x01
  ca:	10 82       	st	Z, r1
	OCR1A=125;
  cc:	ea e4       	ldi	r30, 0x4A	; 74
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	8d e7       	ldi	r24, 0x7D	; 125
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	91 83       	std	Z+1, r25	; 0x01
  d6:	80 83       	st	Z, r24
	TIMSK|=1<<OCIE1A;
  d8:	a9 e5       	ldi	r26, 0x59	; 89
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	e9 e5       	ldi	r30, 0x59	; 89
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	80 61       	ori	r24, 0x10	; 16
  e4:	8c 93       	st	X, r24
}
  e6:	cf 91       	pop	r28
  e8:	df 91       	pop	r29
  ea:	08 95       	ret

000000ec <__vector_7>:

ISR( TIMER1_COMPA_vect)
{
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	8f 93       	push	r24
  f8:	9f 93       	push	r25
  fa:	af 93       	push	r26
  fc:	bf 93       	push	r27
  fe:	ef 93       	push	r30
 100:	ff 93       	push	r31
 102:	df 93       	push	r29
 104:	cf 93       	push	r28
 106:	cd b7       	in	r28, 0x3d	; 61
 108:	de b7       	in	r29, 0x3e	; 62
	if(flag)
 10a:	80 91 60 00 	lds	r24, 0x0060
 10e:	88 23       	and	r24, r24
 110:	89 f0       	breq	.+34     	; 0x134 <__vector_7+0x48>
	{
		PORTC^=1<<PC0;
 112:	a5 e3       	ldi	r26, 0x35	; 53
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	e5 e3       	ldi	r30, 0x35	; 53
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	90 81       	ld	r25, Z
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	89 27       	eor	r24, r25
 120:	8c 93       	st	X, r24
		OCR1A=375;
 122:	ea e4       	ldi	r30, 0x4A	; 74
 124:	f0 e0       	ldi	r31, 0x00	; 0
 126:	87 e7       	ldi	r24, 0x77	; 119
 128:	91 e0       	ldi	r25, 0x01	; 1
 12a:	91 83       	std	Z+1, r25	; 0x01
 12c:	80 83       	st	Z, r24
		flag=0;
 12e:	10 92 60 00 	sts	0x0060, r1
 132:	11 c0       	rjmp	.+34     	; 0x156 <__vector_7+0x6a>
	}
	else
	{
		PORTC^=1<<PC0;
 134:	a5 e3       	ldi	r26, 0x35	; 53
 136:	b0 e0       	ldi	r27, 0x00	; 0
 138:	e5 e3       	ldi	r30, 0x35	; 53
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	90 81       	ld	r25, Z
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	89 27       	eor	r24, r25
 142:	8c 93       	st	X, r24
		OCR1A=125;
 144:	ea e4       	ldi	r30, 0x4A	; 74
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	8d e7       	ldi	r24, 0x7D	; 125
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	91 83       	std	Z+1, r25	; 0x01
 14e:	80 83       	st	Z, r24
		flag=1;
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	80 93 60 00 	sts	0x0060, r24
	}

}
 156:	cf 91       	pop	r28
 158:	df 91       	pop	r29
 15a:	ff 91       	pop	r31
 15c:	ef 91       	pop	r30
 15e:	bf 91       	pop	r27
 160:	af 91       	pop	r26
 162:	9f 91       	pop	r25
 164:	8f 91       	pop	r24
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <Timer1_Pwm_Mode>:
void Timer1_Pwm_Mode(void)
{
 170:	df 93       	push	r29
 172:	cf 93       	push	r28
 174:	cd b7       	in	r28, 0x3d	; 61
 176:	de b7       	in	r29, 0x3e	; 62
	TCCR1A= (1<<WGM11)|(1<<COM1A1);
 178:	ef e4       	ldi	r30, 0x4F	; 79
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	82 e8       	ldi	r24, 0x82	; 130
 17e:	80 83       	st	Z, r24
	TCCR1B= (1<<WGM12)|(1<<WGM13)|(1<<CS11);
 180:	ee e4       	ldi	r30, 0x4E	; 78
 182:	f0 e0       	ldi	r31, 0x00	; 0
 184:	8a e1       	ldi	r24, 0x1A	; 26
 186:	80 83       	st	Z, r24
	TCNT1=0;
 188:	ec e4       	ldi	r30, 0x4C	; 76
 18a:	f0 e0       	ldi	r31, 0x00	; 0
 18c:	11 82       	std	Z+1, r1	; 0x01
 18e:	10 82       	st	Z, r1
	OCR1A=125;
 190:	ea e4       	ldi	r30, 0x4A	; 74
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	8d e7       	ldi	r24, 0x7D	; 125
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	91 83       	std	Z+1, r25	; 0x01
 19a:	80 83       	st	Z, r24
	ICR1=500;
 19c:	e6 e4       	ldi	r30, 0x46	; 70
 19e:	f0 e0       	ldi	r31, 0x00	; 0
 1a0:	84 ef       	ldi	r24, 0xF4	; 244
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	91 83       	std	Z+1, r25	; 0x01
 1a6:	80 83       	st	Z, r24

}
 1a8:	cf 91       	pop	r28
 1aa:	df 91       	pop	r29
 1ac:	08 95       	ret

000001ae <_exit>:
 1ae:	f8 94       	cli

000001b0 <__stop_program>:
 1b0:	ff cf       	rjmp	.-2      	; 0x1b0 <__stop_program>
